<?xml version="1.0" encoding="UTF-8"?>
<beans 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation
		="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<context:component-scan base-package="com.spring" />
	<context:component-scan base-package="com.lec" />
	<context:component-scan base-package="com.sb.common" />
	<mvc:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/sb/resources/**" location="/sb/resources/" />
	<mvc:resources mapping="/sb/css/**"       location="/sb/css/" />
	<mvc:resources mapping="/sb/images/**"       location="/sb/images/" />
	<mvc:resources mapping="/sb/js/**"       location="/sb/js/" />
	<!-- ↑이걸 제외한 모든 파일은 컨테이너에서 처리 -->
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	
	<bean class = "org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<property name = "mappings">
			<value>
				/kosta/user/xmlFunc=xmlController
				/kosta/user/xmlFunc2=xmlController
			</value>
		</property>	
	</bean>
	<!-- 
	<bean class = "org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"/>
	-->
	
	<!--  생성자 DI 주입방식: TestDAO testDAO = new TestDAO();
	<bean id="testDAO" class="com.lec.di.TestDAO"  />
	<bean id="xmlController" class="com.lec.di.XmlController" >
		<constructor-arg>
			<ref bean = "testDAO" />
		</constructor-arg>
	</bean>
	-->
	
	<!-- 프로퍼티(setter) DI 주입 방식 -->
	<bean id="testDAO" class="com.lec.di.TestDAO" scope = "singleton" />
	<bean id="xmlController" class="com.lec.di.XmlController" >
	<!-- 이것도 가능 : <property name = "myDAO" ref = "myDAO" />
					<property name = "myTest" value = ""/> -->
		<property name = "myDAO">
			<ref bean = "testDAO" />
		</property>
	</bean>
	
	<!-- BeanNameUrlHandlerMapping
	<bean name="/xmlFunc" class="com.lec.di.XmlController" >
		<constructor-arg>
			<ref bean = "testDAO" />
		</constructor-arg>
	</bean>
	
	<bean name="/xmlFunc2" class="com.lec.di.XmlController" >
		<constructor-arg>
			<ref bean = "testDAO" />
		</constructor-arg>
	</bean>
	-->
	
	<!-- DBCP data source: 오타 있으면 안됨 -->
	<bean id="MY_tomcat_ds" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"> 
	    <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
	    <property name="url" value="jdbc:oracle:thin:@localhost:1521:XE" />
	    <property name="username" value="it" />
	    <property name="password" value="0000" /> 
	</bean>
	
	<!-- @Controller 찾을 범위 -->
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/" />
		<!-- <beans:property name="prefix" value="/WEB-INF/views/" /> -->
		<property name="suffix" value=".jsp" />
	</bean>
	
</beans>
